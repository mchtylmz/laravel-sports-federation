/*!
 * oneui - v5.9.0
 * @author pixelcave - https://pixelcave.com
 * Copyright (c) 2024
 */
!function () {
    "use strict";

    class e {

        static initCalendar() {
            let e = new Date, t = e.getDate(), a = e.getMonth(), n = e.getFullYear();
            let routeEvents = $('#js-calendar').data('route');

            var eventCalendar = new FullCalendar.Calendar(document.getElementById("js-calendar"), {
                locale: 'tr',
                contentHeight: 640,
                aspectRatio: 1.25,
                themeSystem: "bootstrap5",
                firstDay: 1,
                editable: false,
                droppable: false,
                headerToolbar: {left: "title", right: "prev,next today dayGridMonth,timeGridWeek,listWeek"},
                titleFormat: { year: 'numeric', month: 'long', day: 'numeric' },
                //dayHeaderFormat: { weekday: 'short',  month: 'numeric', day: 'numeric' },
                buttonText: {
                    today: 'Bug√ºn',
                    month: 'Bu Ay',
                    week: 'Bu Hafta',
                    day: 'Bug√ºn',
                    list: 'Liste'
                },
                eventTimeFormat: { // like '14:30:00'
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                drop: false,
                allDaySlot: false,
                //slotDuration: '00:15:00',
                slotMinTime: '08:00:00',
                slotMaxTime: '22:00:00',
                allDaySlot: false,
                weekNumbers: true,
                weekText: 'H',
                weekTextLong: 'Hafta',
                navLinks: true,
                nowIndicator: true,
                dayMaxEventRows: 3,
                moreLinkContent: function (more) {
                    return more.shortText + ' etkinlik';
                },
                // events: routeEvents,
                events: {
                    url: routeEvents,
                    method: 'GET',
                    extraParams: function () {
                        let filterParams = jQuery('form.js-filter-event').serializeArray();

                        let objFilterParams = {};
                        filterParams.forEach(item => {
                            objFilterParams[item.name] = item.value;
                        });

                        return objFilterParams;
                    },
                    failure: function() {
                        alert('Etkinlikler yè´‰klenemedi!');
                    },
                    //color: 'white',   // a non-ajax option
                    //textColor: 'black' // a non-ajax option
                },
                eventClick: function (info) {
                    let event = info.event;

                    $.ajaxSetup({
                        headers: {
                            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                        }
                    });
                    $.ajax({
                        type: 'GET',
                        url: event.extendedProps.view_route,
                        data: {},
                        dataType: 'json',
                        processData: false,
                        contentType: false,
                        cache: false,
                        enctype: 'multipart/form-data',
                        beforeSend: function () {
                            $('.offcanvas-title').html('');
                            $('.offcanvas-body').html('<div class="text-center"><i class="fa fa-spinner fa-pulse fa-3x"></i></div>');
                            $('#offcanvasRight').offcanvas('show');
                        },
                        success: function (response) {
                            $('.offcanvas-title').html(response.title);
                            $('.offcanvas-body').html(response.body);
                            
                             function formOffcanvas(vForm) {
                                vForm.validate({
                                    submitHandler: function (form, e) {
                                        e.preventDefault();
                                        $.ajaxSetup({
                                            headers: {
                                                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                                            }
                                        });
                                        let dataType = $(form).data('type');
                                        if (!dataType) {
                                            dataType = 'json';
                                        }
    
                                        $.ajax({
                                            type: $(form).attr('method'),
                                            url: $(form).attr('action'),
                                            data: new FormData(form),
                                            dataType: dataType,
                                            processData: false,
                                            contentType: false,
                                            cache: false,
                                            enctype: 'multipart/form-data',
                                            beforeSend: function () {
                                                $(form).find('[type=submit]').loading('show');
                                            },
                                            success: function (response) {
                                                if (response.message) {
                                                    alert.fire({
                                                        text: response.message,
                                                        icon: 'success'
                                                    });
                                                } 
    
                                                if (response.title !== undefined) {
                                                    $('.offcanvas-title').html(response.title);
                                                }
                                                if (response.body !== undefined) {
                                                    $('.offcanvas-body').html(response.body);
                                                }
    
                                                let formEventStatus = $('form.event-status-form');
                                                if (formEventStatus.length) {
                                                  
                                                    formOffcanvas(formEventStatus);
                                                }
    
                                                setTimeout(() => {
                                                    let bsTable = $('[data-toggle="table"]');
                                                    if (bsTable.length) {
                                                        bsTable.bootstrapTable('refresh');
                                                    }
                                                }, 500);
                                            },
                                            error: function (response) {
                                                alert.fire({
                                                    text: response.responseJSON.message,
                                                    icon: 'error'
                                                });
                                            }
                                        }).always(function () {
                                            $(form).find('[type=submit]').loading('hide');
                                        });
                                    }
                                });
                            }
    
                            let formEventStatus = $('form.event-status-form');
                            if (formEventStatus.length) {
                                formOffcanvas(formEventStatus);
                            }
                            
                        },
                        error: function (response) {
                            $('.offcanvas-body').html(response.responseJSON.message);
                        }
                    });
                }
            });

            eventCalendar.render();

            jQuery(document).on('submit', 'form.js-filter-event', function (e) {
                e.preventDefault();

                //eventCalendar.refetchEvents();

                // $('[data-toggle="table"]').bootstrapTable('refresh');

                if ($('#btabs-list-tab').hasClass('active')) {
                    $('[data-toggle="table"]').bootstrapTable('refresh');
                } else {
                    eventCalendar.refetchEvents();
                }
            });

            jQuery(document).on('click', '.home-calendar', function (e) {
                e.preventDefault();

                if ($(this).attr('id') == 'btabs-list-tab') {
                    $('[data-toggle="table"]').bootstrapTable('refresh');
                } else {
                    eventCalendar.refetchEvents();
                }
            });


        }

        static init() {
            this.initCalendar()
        }
    }

    One.onLoad((() => e.init()))
}();
